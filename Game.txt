#include <iostream>
#include <conio.h>
#include <ctime>
using namespace std;

bool gameOver; // переменная "если false значит еще играем если true проиграли и цикл прекращается"

//  Размер поля для игры
const int width = 40;
const int height = 20;

int x, y, fruitX, fruitY, score; //х и у координаты самой змейки, Фруиты координаты фруктов, счет

enum eDirection { STOP = 0, LEFT, RIGHT, UP, DOWN };
//перечисление( с нуля так как перывый член STOP равен 0 )типо создает свой тип данных 

eDirection dir;
//переменная с типом данных enum eDirection принимает значения только  STOP, LEFT, RIGHT, UP, DOWN


//функция основы объява всех переменных вызываеться не в цикле!!

void Setup() {
	gameOver = false;
	dir = STOP;
	x = width / 2 - 1;
	y = height / 2 - 1;
	fruitX = rand() % width;
	fruitY = rand() % height;
	score = 0;
}

//Функция рисовки постоянно меняется

void Draw() {
	system("cls"); // каждый раз очищает мапу игры
	for (int i = 0; i < width; i++) {
		cout << "#";
	}
	for (int i = 0; i < height; i++) {
		for (int j = 0; j < width; j++) {

			if (j == 0 || j == width - 1) { cout << "#"; }

			if (i == y && j == x) { cout << "O"; }

			else if (i == fruitY && j == fruitX) { cout << "$"; }

			else
				cout << " ";
		}
		cout << endl;
	}



	for (int i = 0; i < width + 1; i++) {
		cout << "#";
	}




}

//То что ты вводишь для управлением змейки

void Input() {
	// kbhit возвращает true если пользователь нажал на кнопку
	if (_kbhit()) {
		switch (_getch())
		{
		case 'a':
			dir = LEFT;
			break;
		case 'd':
			dir = RIGHT;
			break;
		case 'w':
			dir = UP;
			break;
		case 's':
			dir = DOWN;
			break;
		case '`':
			gameOver = true;
			break;
		}

	}
}

//Логика игры 

void Logic() {
	switch (dir)
	{
	case LEFT:
		x--;
		break;
	case RIGHT:
		x++;
		break;
	case UP:
		y--;
		break;
	case DOWN:
		y++;
		break;
	}

	if (x > width || x < 0 || y > height || y < 0) {
		gameOver = true;
		cout << endl << endl << "Your score: " << score << endl;
	}
	if (x == fruitX && y == fruitY) {
		score += 10;
		fruitX = rand() % width - 1;
		fruitY = rand() % height;
	}
}



int main()
{
	srand(time(NULL));
	Setup();

	//Цикл нужен для выполнения всех функций 
	while (!gameOver) {

		Draw();
		Input();
		Logic();

	}

	system("pause");
	return 0;
}
